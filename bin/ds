#!/usr/bin/perl

# ################################################################
# Copyright [2006-7] [Simon Fraser/Siniatech Ltd]
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ################################################################

# ################################################################
# ds
# 
# A utility script for reading the free space on a disk. 
# An alternative to 'df -h'.
#
# Author:    Simon Fraser
#            simon@siniatech.com
# Version:   1.1
# Date:      2007-02-15
# Source:    http://github.com/siniatech/linuxUtils
#
# ################################################################

use strict;

use POSIX qw(ceil floor);

my $TEMP_FILE= "/tmp/ds_temp.$$";
my $LINE_LENGTH= 55;

sub printLine {
  my $lineChar= shift;
  my $lineLength= shift;
  for (my $i= 0; $i < $lineLength; $i++) { print $lineChar }
  print "\n";
}

sub printPercentageUsed {
  my $percentUsedDiv10= shift;
  for (my $i= 1; $i <= 10; $i++) {
    if ($i <= $percentUsedDiv10) { print "#"; }
    else { print " "; }
  }
}

&printLine("-",$LINE_LENGTH);
printf "%-23s %-6s %-7s %-12s %s\n", "Mount","Size","Avail","Used","%";
&printLine("=",$LINE_LENGTH);

my $totalSize= 0;
my $totalUsed= 0;
system "df -h > $TEMP_FILE";
open my $dhfh, "<", $TEMP_FILE;
my ($header,@dfrows)= <$dhfh>;
foreach (@dfrows) {
  my @args= split /\s+/, $_;
  while (not ($args[0] =~ /^[0-9\.]+[MGK]$/)) { (my $fs,@args)= @args; }
  my ($size,$used,$avail,$pc,$mount)= @args;

  $mount = (split /\//, $mount)[-1];
  my $formatedAvail= sprintf "(%s)", $avail;
  printf "%-23s %-6s %-7s |", $mount,$size,$formatedAvail;

  my $percentUsed= (split /%/, $pc)[0];
  &printPercentageUsed(ceil($percentUsed/10));

  print "| $pc \n";
  $totalSize+= int($size);
  $totalUsed+= int($used);
}

&printLine("-",$LINE_LENGTH);
my $formatedAvail= sprintf "(%dG)", $totalSize-$totalUsed;
printf "%-23s %-6s %-7s |", "Total",$totalSize."G",$formatedAvail;
&printPercentageUsed(int($totalUsed*10/$totalSize));
printf "| %d% \n",int($totalUsed*100/$totalSize);
&printLine("-",$LINE_LENGTH);

unlink $TEMP_FILE;
